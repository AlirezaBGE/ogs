.template-build-linux:
  stage: build
  retry:
    max: 2
    when: runner_system_failure

  script:
    - 'echo "For debugging run: docker run --rm -it -v $CI_BUILDS_DIR:/builds -w=$CI_PROJECT_DIR $CI_JOB_IMAGE"'
    - build_dir_full=../build/${CMAKE_PRESET}
    - log_file=$build_dir_full/make.txt
    - rm -rf $build_dir_full
    - mkdir -p $build_dir_full build
    - if [[ "$OSTYPE" == "darwin"* ]] ; then readlink_cmd=greadlink; else readlink_cmd=readlink; fi
    - ln -s `$readlink_cmd -f $build_dir_full` build/${CMAKE_PRESET}
    - ([ "${CONAN_USER_HOME}" == "${CI_PROJECT_DIR}/.conan" ]) && conan remove --system-reqs '*'
    - ([[ $BUILD_CTEST_LARGE_ON_MASTER && "${CI_COMMIT_BRANCH}" == "master" && "${CMAKE_ARGS}" == *"USE_PYTHON=ON"* ]]) && export BUILD_CTEST_LARGE=true
    - cmake --preset=$CMAKE_PRESET --log-level=VERBOSE -Wno-dev $CMAKE_ARGS
    # Activate .venv
    - test -f $build_dir_full/.venv/bin/activate && source $build_dir_full/.venv/bin/activate
    - |
      if [[ -z "$TARGETS" ]]; then

        if [ "$BUILD_PACKAGE" = false ]; then
          build_package=""
        else
          build_package="--target package"
        fi

        $BUILD_CMD_PREFIX cmake --build --preset=$CMAKE_PRESET ${build_package} > >(tee $log_file)

        if [ "$BUILD_TESTS" = true ]; then $BUILD_CMD_PREFIX cmake --build --preset=$CMAKE_PRESET --target tests ; fi

        if [ "$BUILD_CTEST" = true ]; then
          ctest_timeout=60
          preset_postfix=""
          if [ "$BUILD_CTEST_LARGE" = true ]; then
            ctest_timeout=90
            preset_postfix="-large"
          fi

          xvfb_run_cmd=""
          if [[ "$OSTYPE" == "darwin"* ]]; then
            alias date=gdate
          elif command -v xvfb-run &> /dev/null ; then
            xvfb_run_cmd="xvfb-run -a"
          fi

          regex_argument=""
          if [[ ! -z "$CTEST_INCLUDE_REGEX" ]]; then
            regex_argument="-R ${CTEST_INCLUDE_REGEX}"
          fi
          if [[ ! -z "$CTEST_EXCLUDE_REGEX" ]]; then
            regex_argument="${regex_argument} -E ${CTEST_EXCLUDE_REGEX}"
          fi

          # -M Continuous does not run any tests -> -M Experimental --group Continuous
          # --test-dir has to be provided despite using a preset
          ${xvfb_run_cmd} ctest -M Experimental ${regex_argument} --group Continuous --test-dir ${build_dir_full} -T Test -T Submit --preset=${CMAKE_PRESET}${preset_postfix} --output-junit Tests/ctest.xml --stop-time `date -d "today + ${ctest_timeout} minutes" +'%H:%M:%S'` ${CTEST_ARGS}
        fi

      else

        $BUILD_CMD_PREFIX cmake --build --preset=$CMAKE_PRESET --target ${TARGETS} > >(tee $log_file)

      fi
    - |
      if [[ "$CHECK_WARNINGS" = true ]] ; then
        if [[ $(cat $log_file | grep warning -i | grep -v 'WARNING: no license files found') ]]; then printf 'There were compiler warnings:\n\n'; cat $log_file | grep warning -i | grep -v 'WARNING: no license files found'; exit 1; fi
      fi
