.template-build-linux:
  stage: build
  retry:
    max: 2
    when: runner_system_failure

  before_script:
    - 'echo "For debugging run: docker run --rm -it -v $CI_BUILDS_DIR:/builds -w=$CI_PROJECT_DIR $CI_JOB_IMAGE"'
    - build_dir=${BUILD_DIR:-$CMAKE_PRESET}
    - build_dir_full=../build/${build_dir}
    - rm -rf $build_dir_full
    - mkdir -p $build_dir_full
    - mkdir build
    - if [[ "$OSTYPE" == "darwin"* ]] ; then readlink_cmd=greadlink; else readlink_cmd=readlink; fi
    - ln -s `$readlink_cmd -f $build_dir_full` build/${build_dir}
    - ([ "${CONAN_USER_HOME}" == "${CI_PROJECT_DIR}/.conan" ]) && conan remove --system-reqs '*'
    - ([[ $BUILD_CTEST_LARGE_ON_MASTER && "${CI_COMMIT_BRANCH}" == "master" && "${CMAKE_ARGS}" == *"USE_PYTHON=ON"* ]]) && export BUILD_CTEST_LARGE=true
  script:
    - cmake -S . -B $build_dir_full --preset=$CMAKE_PRESET $CMAKE_ARGS -DOGS_BUILD_PROCESSES=$BUILD_PROCESSES
    - cd $build_dir_full
    - |
      if [[ -z "$TARGETS" ]]; then

        $BUILD_CMD_PREFIX cmake --build . --target package > >(tee make.output)

        if [ "$BUILD_TESTS" = true ]; then $BUILD_CMD_PREFIX cmake --build . --target tests ; fi

        if [ "$BUILD_CTEST" = true ]; then

          ctest_labels="default"
          ctest_timeout=15
          if [ "$BUILD_CTEST_LARGE" = true ]; then
            ctest_labels="large|$ctest_labels"
            ctest_timeout=90
          fi

          if [[ "$OSTYPE" == "darwin"* ]]; then alias date=gdate ; fi

          ctest -T Test --no-compress-output -L "$ctest_labels" --repeat until-pass:2 --stop-time `date -d "today + ${ctest_timeout} minutes" +'%H:%M:%S'`
          cp Testing/**/Test.xml Tests/ctest.xml

        fi
      else
        $BUILD_CMD_PREFIX cmake --build . --target ${TARGETS} > >(tee make.output)
      fi
    - |
      if [[ "$CHECK_WARNINGS" = true ]] ; then
        if [[ $(cat make.output | grep warning -i | grep -v 'WARNING: no license files found') ]]; then printf 'There were compiler warnings:\n\n'; cat make.output | grep warning -i | grep -v 'WARNING: no license files found'; exit 1; fi
      fi
