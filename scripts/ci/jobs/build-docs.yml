build docs:
  stage: build
  image: $CONTAINER_GCC_IMAGE
  needs: [meta, ci_images]
  timeout: 15 minutes
  variables:
    DOX_WARNINGS_THRESHOLD: 9
  script:
    # HACK to easier linking to the generated pages
    - echo '<meta http-equiv="REFRESH" content="0;URL=build/docs/index.html">' >> Doxygen.html
    - mkdir -p build
    # cpp-dependencies
    - NUM_CYCLES=`cpp-dependencies --stats|grep cycles|cut -d " " -f 2`
    - echo "num_cycles $NUM_CYCLES" > metrics.txt
    - cpp-dependencies --graph cpp-dependencies.dot && dot -Tsvg cpp-dependencies.dot -o build/cpp-dependencies.svg
    # lizard, default code complexity number (15), function line length 100, max arguments 10
    - lizard -l cpp -w -t 1 --length 100 --arguments 10 > lizard.txt || true
    - cat lizard.txt
    - NUM_LIZARD_ISSUES=`cat lizard.txt | wc -l`
    - echo "lizard_issues $NUM_LIZARD_ISSUES" >> metrics.txt
    - lizard -l cpp -t 8 --html -o Lizard.html
    - lizard -EWordCount -x "./ThirdParty/*" -x "./Tests/*" || true # word-cloud
    # build
    - cd build
    - cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Release -DOGS_BUILD_PROCESSES=SteadyStateDiffusion
    - cmake . --graphviz=cmake-dependencies.dot && dot -Tsvg cmake-dependencies.dot -o cmake-dependencies.svg
    - cmake . -DOGS_BUILD_PROCESSES=SteadyStateDiffusion
    - cmake --build . --target doc &> >(tee make-docs.output)
    - cat make-docs.output DoxygenWarnings.log | grep 'warning:' | grep -v 'too many nodes\|perl:' >> DoxygenWarnings-filtered.log
    - NUM_DOX_WARNINGS=`cat DoxygenWarnings-filtered.log | wc -l | xargs`
    - echo "doxygen_warnings $NUM_DOX_WARNINGS" >> metrics.txt
    - |
      if [[ ( "$NUM_DOX_WARNINGS" -gt "$DOX_WARNINGS_THRESHOLD" ) ]]; then
        echo "Error: Number of Doxygen warnings exceeded threshold â€“> $NUM_DOX_WARNINGS > $DOX_WARNINGS_THRESHOLD"
        echo "----------------------------------------------------"
        cat DoxygenWarnings.log
        exit 1
      fi
    - echo "Number of Doxygen warnings is $NUM_DOX_WARNINGS (threshold is $DOX_WARNINGS_THRESHOLD)."
    - BRANCH_REGEX="^v[0-9]\.[0-9]\.[0-9]"
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" || "$CI_COMMIT_TAG" || "$CI_COMMIT_BRANCH" =~ $BRANCH_REGEX ]]; then
        sshpass -p $DOXYSEARCH_PW rsync -az searchdata.xml webdev@doxysearch.opengeosys.org:/var/www/doxysearch.opengeosys.org/$CI_COMMIT_BRANCH/
        sshpass -p $DOXYSEARCH_PW ssh webdev@doxysearch.opengeosys.org doxyindexer -o /var/www/doxysearch.opengeosys.org/$CI_COMMIT_BRANCH /var/www/doxysearch.opengeosys.org/$CI_COMMIT_BRANCH/searchdata.xml
      fi
  artifacts:
    expose_as: "Doxygen"
    paths:
      - Doxygen.html
      - build/docs
      - build/cpp-dependencies.svg
      - build/cmake-dependencies.svg
      - Lizard.html
      - lizard.txt
      - codecloud.html
      - build/DoxygenWarnings.log
      - build/DoxygenWarnings-filtered.log
    expire_in: 1 week
    reports:
      metrics: build/metrics.txt
    when: always

deploy docs:
  stage: package
  image: node:slim
  needs: ["build docs"]
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_BRANCH =~ /^v[0-9]\.[0-9]\.[0-9]/
    - if: $CI_COMMIT_TAG
  before_script:
    - npm install -g netlify-cli --unsafe-perm=true
  script:
    - |
      if [ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" || "$CI_COMMIT_TAG" ]; then
        cp scripts/doc/_redirects build/docs
        netlify deploy --prod --dir=build/docs --site $NETLIFY_SITE_ID
      else
        netlify link --name ogs-doxygen-${CI_COMMIT_BRANCH//./-}
        netlify deploy --prod --dir=build/docs
      fi

check docs links:
  stage: check
  tags: [docker]
  allow_failure: true
  image: $WEB_IMAGE
  needs: [meta, ci_images, "build docs"]
  extends:
    - .rules-master-manual
  script:
    - cd build
    - >
      urlchecker check --retry-count 5 --file-types .html
      --exclude-patterns \&lt\;,\&quot,www.w3.org,www.doxygen.org,cdnjs.cloudflare.com,docs.opengeosys.org/docs/tools,sciencedirect.com
      --exclude-urls http://www.opengeosys.org/project/license,http://www.opengeosys.org,http://www.opengeosys.org\&quot,http://www.trolltech.com/products/qt/licensing.html,http://www.trolltech.com/products/qt/opensource.html
      --exclude-files project_file_doc_qa.html,ogs_file_
      docs

spell check docs:
  image: registry.gitlab.com/gitlab-org/gitlab-docs/lint-markdown:alpine-3.15-vale-2.16.1-markdownlint-0.31.1
  stage: check
  needs: []
  variables:
    VALE_OUTPUT: json
  script:
    - scripts/ci/helper/run-vale > vale-report.json
  artifacts:
    paths:
      - vale-report.json
    reports:
      codequality: vale-report.json
